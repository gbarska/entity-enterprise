// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Order.Data;

namespace Order.Data.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Order")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Order.Domain.LineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<Guid>("SalesOrderId");

                    b.Property<int?>("ShipmentId");

                    b.Property<double?>("UnitPrice");

                    b.Property<double?>("UnitPriceDiscount");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("Order.Domain.SalesOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<int>("CurrentCustomerStatus");

                    b.Property<double>("CustomerDiscount");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime?>("DueDate");

                    b.Property<bool>("OnlineOrder");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("PromoDiscount");

                    b.Property<int>("PromotionId");

                    b.Property<string>("PurchaseOrderNumber");

                    b.Property<string>("SalesOrderNumber");

                    b.Property<double>("SubTotal");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Order.Domain.LineItem", b =>
                {
                    b.HasOne("Order.Domain.SalesOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Order.Domain.SalesOrder", b =>
                {
                    b.OwnsOne("Order.Domain.ValueObjects.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<Guid>("SalesOrderId");

                            b1.Property<string>("City");

                            b1.Property<string>("PostalCode");

                            b1.Property<string>("StateProvince");

                            b1.Property<string>("Street");

                            b1.HasKey("SalesOrderId");

                            b1.ToTable("ShippingAddresses","Order");

                            b1.HasOne("Order.Domain.SalesOrder")
                                .WithOne("ShippingAddress")
                                .HasForeignKey("Order.Domain.ValueObjects.Address", "SalesOrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
